#version 430

layout (local_size_x = 1, local_size_y = 1) in;
layout (rgba32f, binding = 0) uniform image2D img_out;

struct ball {
    float size;
    float pos_x;
    float pos_y;
    float vel_x;
    float vel_y;
    float r;
    float g;
    float b;
};

layout (std430, binding = 1) buffer metaball_data {
    uint numBalls;
    ball balls[];
} metaballs;

uniform float radiusMult = 1000.0f;

float distance(float x1, float y1, float x2, float y2) {
    float x = x2 - x1;
    x = pow(x, 2.0);
    float y = y2 - y1;
    y = pow(y, 2.0);
    return sqrt(x + y);
}

void main() {
    ivec2 idx = ivec2(int(gl_GlobalInvocationID.x), int(gl_GlobalInvocationID.y));
    ivec2 image_size = ivec2(int(gl_NumWorkGroups.x), int(gl_NumWorkGroups.y));
    vec4 color = vec4(0, 0, 0, 1.0f);

    float posX, posY;
    posX = float(idx.x);
    posY = float(idx.y);

    for (int i = 0; i < metaballs.numBalls; i++) {
        float dist = distance(posX, posY, metaballs.balls[i].pos_x, metaballs.balls[i].pos_y);
        float mult = radiusMult * metaballs.balls[i].size / dist;
        color += mult * vec4(metaballs.balls[i].r, metaballs.balls[i].g, metaballs.balls[i].b, 1);
    }

    color /= (255 * metaballs.numBalls);
    color.a = 1.0f;
    
    imageStore(img_out, idx, color);
}