#version 430

layout (local_size_x = 1, local_size_y = 1) in;
layout (rgba32f, binding = 0) uniform image2D img_out;

layout (std430, binding = 1) buffer metaball_data {
    int numBalls;
    struct {
        float size;
        struct {
            float x;
            float y;
        } position;
        struct {
            float x;
            float y;
        } velocity;
        struct {
            float r;
            float g;
            float b;
        } color;
    } balls[];
};

float distance(float x1, float y1, float x2, float y2) {
    float x = x2 - x1;
    x = x * x;
    float y = y2 - y1;
    y = y * y;
    return sqrt(x + y);
}

void main() {
    ivec2 idx = ivec2(int(gl_GlobalInvocationID.x), int(gl_GlobalInvocationID.y));
    ivec2 image_size = ivec2(int(gl_NumWorkGroups.x), int(gl_NumWorkGroups.y));
    vec4 color = vec4(0, 0, 0, 1);

    float posX, posY;
    posX = (float) idx.x;
    posY = (float) idx.y;
    for (int i = 0; i < metaball_data.numBalls; i++) {
        if (distance(posX, posY, metaball_data[i].position.x, metaball_data[i].position.y) <= metaball_data[i].size) {
            color.r = metaball_data[i].color.r;
            color.g = metaball_data[i].color.g;
            color.b = metaball_data[i].color.b;
            break;
        }
    }

    imageStore(img_out, idx, color);
}